service: juanTorres

plugins:
  - serverless-iam-roles-per-function
  - serverless-offline

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  environment:
    DYNAMOTABLECLIENT: ${self:service}-Client
    DYNAMOTABLEPRODUCT: ${self:service}-Product
    cardQueueArn: !GetAtt CardQueue.Arn
    giftQueueArn: !GetAtt GiftQueue.Arn
    topicServ: !Ref CreateTopic
    SERVICENAME: ${self:service}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: '*'

functions: 
  - ${file(src/client/config.yml)}
  - ${file(src/product/config.yml)}
  - ${file(src/card/config.yml)}
  - ${file(src/gift/config.yml)}


resources:
  Resources:
    CreateTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Created Topic
        TopicName: ${self:service}-${self:provider.stage}-create-topic
        Subscription:
          - Protocol: sqs
            Endpoint: !GetAtt CardQueue.Arn
          - Protocol: sqs
            Endpoint: !GetAtt GiftQueue.Arn
    CardQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:service}-cardqueue
    CardQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - SQS:*
              Resource: !GetAtt CardQueue.Arn
              Principal:
                AWS:
                  - !Ref AWS::AccountId
            - Effect: Allow
              Principal:
                AWS:
                  - "*"
              Action:
                - SQS:SendMessage
              Resource: !GetAtt CardQueue.Arn
              Condition:
                ArnLike:
                  aws:SourceArn:
                    - !Ref CreateTopic
        Queues:
          - !Ref CardQueue

    GiftQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:service}-giftqueue
    GiftQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - SQS:*
              Resource: !GetAtt GiftQueue.Arn
              Principal:
                AWS:
                  - !Ref AWS::AccountId
            - Effect: Allow
              Principal:
                AWS:
                  - "*"
              Action:
                - SQS:SendMessage
              Resource: !GetAtt GiftQueue.Arn
              Condition:
                ArnLike:
                  aws:SourceArn:
                    - !Ref CreateTopic
        Queues:
          - !Ref GiftQueue

custom:
  webpackIncludeModules: true
  stage: "${opt:stage, self:provider.stage}"