create-client:
    name: ${self:service}-${self:provider.stage}-create-client
    handler: src/client/handler/create.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sns:Publish
        Resource:
          - ${self:provider.environment.topicServ}
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
        Resource:
          - "arn:aws:dynamodb:us-east-1:*:table/${self:service}-Client"
    environment:
      CLIENT_TOPIC: ${self:provider.environment.topicServ}
      ENVIRONMENT: ${self:provider.stage}
    events:
      - httpApi:
          path: /${self:provider.stage}/client
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
            allowCredentials: false
get-client:
  name: ${self:service}-${self:provider.stage}-get-client
  handler: src/client/handler/get.handler
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - ${self:provider.environment.topicServ}
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource:
        - "arn:aws:dynamodb:us-east-1:*:table/${self:service}-Client"
        - "arn:aws:dynamodb:us-east-1:*:table/${self:service}-Product"

  environment:
    CLIENT_TOPIC: ${self:provider.environment.topicServ}
    ENVIRONMENT: ${self:provider.stage}
  events:
    - httpApi:
        path: /${self:provider.stage}/client/{dni}
        method: get
        cors:
          origin: "*"
          headers:
            - Content-Type
            - X-Amz-Date
            - Authorization
            - X-Api-Key
            - X-Amz-Security-Token
            - X-Amz-User-Agent
            - X-Amzn-Trace-Id
          allowCredentials: false

update-client:
    name: ${self:service}-${self:provider.stage}-update-client
    handler: src/client/handler/update.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sns:Publish
        Resource:
          - ${self:provider.environment.topicServ}
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
        Resource:
          - "arn:aws:dynamodb:us-east-1:*:table/${self:service}-Client"
    environment:
      CLIENT_TOPIC: ${self:provider.environment.topicServ}
      ENVIRONMENT: ${self:provider.stage}
    events:
      - httpApi:
          path: /${self:provider.stage}/client/{dni}
          method: patch
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
            allowCredentials: false

delete-client:
    name: ${self:service}-${self:provider.stage}-delete-client
    handler: src/client/handler/delete.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sns:Publish
        Resource:
          - ${self:provider.environment.topicServ}
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
        Resource:
          - "arn:aws:dynamodb:us-east-1:*:table/${self:service}-Client"
    environment:
      CLIENT_TOPIC: ${self:provider.environment.topicServ}
      ENVIRONMENT: ${self:provider.stage}
    events:
      - httpApi:
          path: /${self:provider.stage}/client/{dni}
          method: delete
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
            allowCredentials: false
